#include <iostream>
#include <unordered_map>
#include <vector>

using namespace std;

unordered_map<char, int> m({
    {'c', (1 << 2) | (1 << 3) | (1 << 4) | (1 << 7) | (1 << 8) | (1 << 9) |
              (1 << 10)},
    {'d', (1 << 2) | (1 << 3) | (1 << 4) | (1 << 7) | (1 << 8) | (1 << 9)},
    {'e', (1 << 2) | (1 << 3) | (1 << 4) | (1 << 7) | (1 << 8)},
    {'f', (1 << 2) | (1 << 3) | (1 << 4) | (1 << 7)},
    {'g', (1 << 2) | (1 << 3) | (1 << 4)},
    {'a', (1 << 2) | (1 << 3)},
    {'b', (1 << 2)},
    {'C', (1 << 3)},
    {'D', (1 << 1) | (1 << 2) | (1 << 3) | (1 << 4) | (1 << 7) | (1 << 8) |
              (1 << 9)},
    {'E', (1 << 1) | (1 << 2) | (1 << 3) | (1 << 4) | (1 << 7) | (1 << 8)},
    {'F', (1 << 1) | (1 << 2) | (1 << 3) | (1 << 4) | (1 << 7)},
    {'G', (1 << 1) | (1 << 2) | (1 << 3) | (1 << 4)},
    {'A', (1 << 1) | (1 << 2) | (1 << 3)},
    {'B', (1 << 1) | (1 << 2)},
});

int main() {
    int n, aux;
    cin >> n;

    string s;
    getline(cin, s);
    for (int i = 0; i < n; i++) {
        getline(cin, s);

        vector<int> c(10, 0);
        for (string::size_type j = 0; j < s.length(); j++) {
            aux = m[s[j]];

            for (int k = 1; k < 11; k++) {
                if (aux & (1 << k)) {
                    if (j == 0) {
                        c[k - 1]++;
                        continue;
                    }
                    if (!(m[s[j - 1]] & (1 << k))) {
                        c[k - 1]++;
                    }
                }
            }
        }

        for (int j = 0; j < c.size(); j++) {
            cout << c[j] << ' ';
        }

        cout << endl;
    }
    return 0;
}
